#+STARTUP: showall indent
#+STARTUP: hidestars
#+OPTIONS: toc:nil
#+begin_html
---
published: true
layout: post
title: It's easy to teach coding when you can hide the results
tags:  
---
#+end_html

#+begin_html
<style>
div.center {text-align:center;}
</style>
#+end_html

* 
A few weeks ago I [[http://cestlaz.github.io/2015/03/04/expedient-vs-good.html#.VRnfdt-c30o][ranted]] on the "let's drop in a curriculum"  approach
that's all too popular in trying to get CS into the schools.

Today, I thought I'd take on after school and summer programs. Maybe
today's rant is motivated by some of my frustration I've had in
getting support for my programs while I see programs and people of
questionable quality given huge voices in the CS Ed conversation but
so be it.

You know the programs I'm talking about:

- learn to make an app in n weeks
- learn more than AP CS in a month
- learn to code just like the big boys

Now, many of the people involved in these programs are very well
meaning and in fact believe they're doing a great job. Unfortunately,
they suffer from that popular fallacy that anyone can teach. On top of
that, we live in a society that has gone from "those that can't do,
teach" to "those that teach, can't."

What's the general overall plan:

- Adverstise
- maybe have some idea of a curriculum
- and only then look for a teacher and the term teacher is use
  losely. 

Note that the people who make those curricula rarely have any real
educational background.

And yet these programs are popular - regularly praised in the media
and don't seem to have any problems raising money or filling seats.

So, how do they do it?

Well, they don't.

What they are doing is picking the low hanging fruit.

First ingredient - take high performing students - in some cases, ones
that already know the material. This creates the illusion that you've
got a great program. I know, you're saying "but Mike, you teach high
performing kids." True, but I work to take them far beyond where they
start and I don't pass them off as "anyone can do this" mircacles.

Second, use tools that make easy, showy results -- programs like
AppInvenntor or high level frameworks. Teach APIs and then glue a few
pieces together.

Third - put on a show - demo day.

Finally - pass the buck.

The stars from these programs do just fine, but then they'd do fine
anywhere. It's the next level kid that gets hurt. They go on to a real
computer science class and get hit over the head with a hammer. It
isn't pretty. Now us teachers don't have PR people so it's easy to
then blame the teacher.

I read an article a while ago - it talked about a kid who was in one
of these programs who was then having enormous trouble in AP CS. The
article then spent a good deal of time blaming the kids teacher in
school. Maybe the teacher wasn't terrific but the kid was in a program
that has proudly proclaimed to better prepare their kids for AP CS
than the course itself. If this were true, why was the kid having trouble.

So the teacher gets blamed and the program continues to maintain the
illusion of really teaching and happily raises money but does little
good.

